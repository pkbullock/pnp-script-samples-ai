{
  "Script": "inputs/siteids.ps1",
  "Prompt": "Please produce a short descriptive paragraph around 150 words long, what the PowerShell script is, anticipate its purpose. The response should include a Title, Description, Assumptions, and Dependencies.  \\n Here is the PowerShell script to use for the descripion: param(\r\n    [Parameter(Mandatory=$true)]\r\n    [ValidatePattern(\"^https://.*\\.sharepoint\\.com$\", ErrorMessage=\"Please enter a valid SharePoint Online Admin URL\")]\r\n    [string]$SPOAdminURL = $(Read-Host -Prompt \"Please enter the SharePoint Online Admin URL\"),\r\n   \r\n    [Parameter(Mandatory=$false)]\r\n    [string]$log = \".\\SPOSiteURLs.csv\"\r\n)\r\n\r\n## Load Form Selector\r\nAdd-Type -AssemblyName System.Windows.Forms\r\n\r\nfunction Select-FileDialog {\r\n    param([string]$Title, [string]$Directory, [string]$Filter=\"All Files (*.*)|*.*\")\r\n    $objForm = New-Object System.Windows.Forms.OpenFileDialog\r\n    $objForm.InitialDirectory = $Directory\r\n    $objForm.Filter = $Filter\r\n    $objForm.Title = $Title\r\n    $Show = $objForm.ShowDialog()\r\n    if ($Show -eq \"OK\") {\r\n        return $objForm.FileName\r\n    } else {\r\n        Write-Error \"Operation cancelled by user.\"\r\n        exit\r\n    }\r\n}\r\n\r\n## Check Execution Policy\r\n$currentPolicy = Get-ExecutionPolicy\r\nif ($currentPolicy -ne \"Unrestricted\") {\r\n    Write-Host \"Current execution policy is $currentPolicy. This script requires it to be Unrestricted.\" -ForegroundColor Yellow\r\n    try {\r\n        Set-ExecutionPolicy Unrestricted -Scope Process -Force\r\n        Write-Host \"Execution policy set to Unrestricted for this session.\" -ForegroundColor Green\r\n    } catch {\r\n        Write-Error \"Failed to set execution policy. Please run PowerShell as an administrator and try again.\"\r\n        exit\r\n    }\r\n}\r\n\r\n## Check to see if PNP is installed\r\nWrite-Host \"Please ensure that you are running PowerShell in Admin Mode\" -ForegroundColor Yellow\r\n$CheckPNP = Get-Module -Name PnP.PowerShell -ListAvailable\r\nif ($CheckPNP -eq $null) {\r\n    Write-Host \"It appears you do not have SharePoint Online PNP installed!\" -ForegroundColor Red\r\n    $Force = Read-Host \"Would you like to install SharePoint Online PNP Module? Type 'Y' to force or type 'N' to continue\"\r\n    if ($Force -like \"y\") {\r\n        try {\r\n            Install-Module -Name PnP.PowerShell -Force -ErrorAction Stop\r\n            Import-Module PnP.PowerShell -ErrorAction Stop\r\n            Write-Host \"PnP PowerShell module installed successfully.\" -ForegroundColor Green\r\n        } catch {\r\n            Write-Error \"Failed to install PnP PowerShell module. Exiting script.\"\r\n            exit\r\n        }\r\n    } elseif ($Force -like \"n\") {\r\n        Write-Host \"Continuing without install of PNP and assuming module was not detected properly\" -ForegroundColor Yellow\r\n    }\r\n}\r\n\r\n# Select Input File\r\nWrite-Host \"Please select the input text file which has the site collection GUID's.......\" -ForegroundColor DarkGreen\r\n$InputFile = Select-FileDialog -Title \"Select the input file of site ID's to convert to URL's\"\r\n\r\nif (-not (Test-Path -Path $InputFile -PathType Leaf)) {\r\n    Write-Error \"The selected file does not exist. Exiting script.\"\r\n    exit\r\n}\r\n\r\n$cnt = Get-Content $InputFile\r\n\r\n$starttime = Get-Date\r\n\r\n## Connect to PNP PowerShell\r\ntry {\r\n    Connect-PnPOnline -Url $SPOAdminURL -Interactive -ErrorAction Stop\r\n} catch {\r\n    Write-Error \"Failed to connect to SharePoint Online. Please check your admin URL and credentials.\"\r\n    exit\r\n}\r\n\r\n## Create Result Set\r\n[System.Collections.Generic.List[PSCustomObject]] $results = New-Object System.Collections.Generic.List[PSCustomObject]\r\n\r\n$count = 0\r\n\r\nforeach ($siteid in $cnt) {\r\n    try {\r\n        Write-Progress -Activity 'Processing sites..' -Status $siteid -PercentComplete ($count / $cnt.count * 100)\r\n        $query = \"SiteId:$siteid contentClass:STS_Site\"\r\n        $result = Submit-PnPSearchQuery -Query $query -ErrorAction Stop\r\n        foreach ($row in $result.ResultRows) {\r\n            $res = New-Object psobject\r\n            foreach ($key in $row.Keys) {\r\n                $res | Add-Member -MemberType NoteProperty -Name $key -Value $row[$key]\r\n            }\r\n            $results.Add($res)\r\n        }\r\n        $count++\r\n    } catch {\r\n        Write-Host \"Failed to process $siteid. Error: $_\" -ForegroundColor Red\r\n        continue\r\n    }\r\n}\r\n\r\ntry {\r\n    $results | Export-Csv -Path $log -NoTypeInformation -Force -Append\r\n} catch {\r\n    Write-Error \"Failed to export results to CSV. Error: $_\"\r\n    exit\r\n}\r\n\r\n$duration = (Get-Date) - $starttime\r\nWrite-Host \"`nComplete in $($duration)!\" -ForegroundColor Green\r\nWrite-Host \"Total sites processed: $count\" -ForegroundColor Cyan\r\nWrite-Host \"Please review the log at $($log)\" -ForegroundColor Cyan ",
  "SystemPrompt": "You are a helpful analyser of PowerShell scripts that will be used to produce title and description of what the script intended function. Intended to give readers of the PowerShell script, a friendly message to describe what the script is about. The PowerShell scripts can be based on the Microsoft services such as Microsoft 365, SharePoint, Azure, Power Platform, Teams, Security and Compliance. The reponses should be in English and in JSON Format using this example: { \"Title\": \"Title of the Script\", \"Purpose\": \"Purpose of the Script\", \"LongDescription\": \"Describe what Powershell Script does\", \"Dependencies\": [\"Connect-PnPOnline\", \"Get-PnPListItem\"],  \"Assumptions\": [{ \"SourceSitePartURLRequired\": true, \"TenantFilterOptional\": false }]}.   If you don't know the answer, just say that you don't know, don't try to make up an answer",
  "LocalModelResults": [
    {
      "Model": "phi3.5:3.8b-mini-instruct-q4_0",
      "ModelResultDescription": "{\n  \"Title\": \"SharePoint Online Site Collection GUIDs to URLs Converter\",\n  \"Purpose\": \"The script's purpose is to convert a list of SharePoint site collection GUIDs into their corresponding URL addresses.\",\n  \"LongDescription\": \"This PowerShell script takes an input file containing one or more SharePoint online (Office 365) Site Collection Object IDs and converts them into the full URLs. It requires PnP Online module for connection to Office 365, performs a search query using these GUIDs as parameters, retrieves site details including their respective URL addresses from each result row.\",\n  \"Dependencies\": [\"Connect-PnPOnline\", \"Submit-PnPSearchQuery\"],\n  \"Assumptions\": [\n    {\n      \"SourceSitePartURLRequired\": true\n    },\n    {\n      \"TenantFilterOptional\": false\n    }\n  ]\n}\n",
      "ModelResultObject": {
        "Title": "SharePoint Online Site Collection GUIDs to URLs Converter",
        "Purpose": "The script's purpose is to convert a list of SharePoint site collection GUIDs into their corresponding URL addresses.",
        "LongDescription": "This PowerShell script takes an input file containing one or more SharePoint online (Office 365) Site Collection Object IDs and converts them into the full URLs. It requires PnP Online module for connection to Office 365, performs a search query using these GUIDs as parameters, retrieves site details including their respective URL addresses from each result row.",
        "Dependencies": [
          "Connect-PnPOnline",
          "Submit-PnPSearchQuery"
        ],
        "Assumptions": [
          {
            "SourceSitePartURLRequired": true
          },
          {
            "TenantFilterOptional": false
          }
        ]
      },
      "ExecutionTimeInSeconds": 54.0906146,
      "ModelResponse": {
        "model": "phi3.5:3.8b-mini-instruct-q4_0",
        "created_at": "2024-12-01T09:57:57.1486858Z",
        "response": "{\n  \"Title\": \"SharePoint Online Site Collection GUIDs to URLs Converter\",\n  \"Purpose\": \"The script's purpose is to convert a list of SharePoint site collection GUIDs into their corresponding URL addresses.\",\n  \"LongDescription\": \"This PowerShell script takes an input file containing one or more SharePoint online (Office 365) Site Collection Object IDs and converts them into the full URLs. It requires PnP Online module for connection to Office 365, performs a search query using these GUIDs as parameters, retrieves site details including their respective URL addresses from each result row.\",\n  \"Dependencies\": [\"Connect-PnPOnline\", \"Submit-PnPSearchQuery\"],\n  \"Assumptions\": [\n    {\n      \"SourceSitePartURLRequired\": true\n    },\n    {\n      \"TenantFilterOptional\": false\n    }\n  ]\n}\n",
        "done": true,
        "done_reason": "stop",
        "total_duration": 51933264700,
        "load_duration": 3850068500,
        "prompt_eval_count": 1597,
        "prompt_eval_duration": 38035000000,
        "eval_count": 206,
        "eval_duration": 10020000000
      }
    }
  ],
  "Processed": false
}
