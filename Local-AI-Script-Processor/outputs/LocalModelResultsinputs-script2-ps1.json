{
  "Script": "inputs/script2.ps1",
  "Prompt": "Please produce a short descriptive paragraph around 150 words long, what the PowerShell script is, anticipate its purpose. The response should include a Title, Description, Assumptions, and Dependencies.  \\n Here is the PowerShell script to use for the descripion: $DOCUMENT_LIBRARY_BASETEMPLATE = 101\r\n$FOLDER_OBJECT_TYPE = 1\r\n\r\n\r\n$TenantAdminUrl = \"https://2v8lc2-admin.sharepoint.com/\"\r\n$ClientId = \"#####\"\r\n$Thumbprint = \"#####\"\r\n\r\n\r\nWrite-Host \"Connecting to Tenant Admin Site...\"\r\nConnect-PnPOnline -Url $TenantAdminUrl -Thumbprint $Thumbprint -ClientId $ClientId\r\n$Sites = Get-PnPTenantSite | Where-Object { $_.Template -ne \"RedirectSite#0\" -and $_.Template -ne \"SPSMSITEHOST#0\" }\r\n\r\n\r\n$Report = @()\r\n\r\n\r\nWrite-Host \"Processing $($sites.Count) sites...\"\r\nforeach ($Site in $Sites) {\r\n    Write-Host \"> $($Site.Url)\" -ForegroundColor Blue\r\n    $Connection = Connect-PnPOnline -Url $Site.Url -Thumbprint $Thumbprint -ClientId $ClientId -ReturnConnection\r\n    $Lists = Get-PnPList -Connection $Connection | Where-Object { $_.BaseTemplate -eq $DOCUMENT_LIBRARY_BASETEMPLATE -and $_.Hidden -eq $false }\r\n  \r\n    $TotalSiteItemCount = $Lists | ForEach-Object { $_.ItemCount } | Measure-Object -Sum | Select-Object -ExpandProperty Sum\r\n    $Report += [PSCustomObject]@{\r\n        Type                     = \"Site\"\r\n        Id                       = $Site.Id\r\n        Path                     = $Site.Url\r\n        WebUrl                   = $Site.Url\r\n        SiteTitle                = $Site.Title\r\n        DocumentLibraryTitle     = \"\"\r\n        DocumentLibraryUrl       = \"\"\r\n        DocumentLibraryId        = \"\"\r\n        DirectFolderCount        = 0\r\n        DirectFilesCount         = 0\r\n        DirectItemCount          = $Lists.Count\r\n        DirectPercentageOfDocLib = \"0%\"\r\n        DirectPercentageOfSite   = \"100%\"\r\n        TotalFolderCount         = 0\r\n        TotalFilesCount          = 0\r\n        TotalItemCount           = $TotalSiteItemCount\r\n        TotalPercentageOfDocLib  = \"0%\"\r\n        TotalPercentageOfSite    = \"100%\"\r\n    }\r\n\r\n\r\n    foreach ($List in $Lists) {\r\n        write-host \"`t> $($List.Title)\"\r\n\r\n        if ($List.ItemCount -gt 0) {\r\n            $Items = Get-PnPListItem -List $List -Fields \"FileRef\", \"FileDirRef\", \"ItemChildCount\", \"FFSObjType\", \"ID\", \"FolderChildCount\" -PageSize 5000 -Connection $Connection\r\n           \r\n            $Folders = $Items | Where-Object { $_.FieldValues.FSObjType -eq $FOLDER_OBJECT_TYPE } | Sort-Object -Property FileRef\r\n            $Files = $Items | Where-Object { $_.FieldValues.FSObjType -ne $FOLDER_OBJECT_TYPE } | Sort-Object -Property FileRef\r\n\r\n            $RootLevelFolderCount = $Folders | Where-Object { $_.FieldValues.FileDirRef -eq $List.RootFolder.ServerRelativeUrl } | Measure-Object | Select-Object -ExpandProperty Count\r\n            $RootLevelFileCount = $Files | Where-Object { $_.FieldValues.FileDirRef -eq $List.RootFolder.ServerRelativeUrl } | Measure-Object | Select-Object -ExpandProperty Count\r\n            $RootLevelItemCount = $RootLevelFolderCount + $RootLevelFileCount\r\n\r\n            $Report += [PSCustomObject]@{\r\n                Type                     = \"Document Library\"\r\n                Id                       = $List.Id\r\n                Path                     = $List.RootFolder.ServerRelativeUrl\r\n                WebUrl                   = $Site.Url\r\n                SiteTitle                = $Site.Title\r\n                DocumentLibraryTitle     = $List.Title\r\n                DocumentLibraryUrl       = $List.RootFolder.ServerRelativeUrl\r\n                DocumentLibraryId        = $List.Id\r\n                DirectFolderCount        = $RootLevelFolderCount\r\n                DirectFilesCount         = $RootLevelFileCount\r\n                DirectItemCount          = $RootLevelItemCount\r\n                DirectPercentageOfDocLib = $RootLevelItemCount -gt 0 ? \"$([Math]::Round(($RootLevelItemCount / $List.ItemCount) * 100, 2))%\" : \"0%\"\r\n                DirectPercentageOfSite   = $TotalSiteItemCount -gt 0 ? \"$([Math]::Round(($RootLevelItemCount / $TotalSiteItemCount) * 100, 2))%\" : \"0%\"\r\n                TotalFolderCount         = $Folders.Count\r\n                TotalFilesCount          = $Files.Count\r\n                TotalItemCount           = $List.ItemCount\r\n                TotalPercentageOfDocLib  = $List.ItemCount -gt 0 ? \"$([Math]::Round(($List.ItemCount / $List.ItemCount) * 100, 2) ?? 0)%\" : \"0%\"\r\n                TotalPercentageOfSite    = $List.ItemCount -gt 0 ? \"$([Math]::Round(($List.ItemCount / $TotalSiteItemCount) * 100, 2) ?? 0)%\" : \"0%\"\r\n            }\r\n    \r\n\r\n\r\n            foreach ($Folder in $Folders) {  \r\n                Write-Host \"`t`t> $($Folder.FieldValues.FileRef)\"\r\n                \r\n                $TotalSubFolderCount = $Folders | Where-Object { $_.FieldValues.FileRef.StartsWith($folder.FieldValues.FileRef + \"/\") } | Measure-Object | Select-Object -ExpandProperty Count\r\n                $TotalSubFilesCount = $Files | Where-Object { $_.FieldValues.FileRef.StartsWith($folder.FieldValues.FileRef) } | Measure-Object | Select-Object -ExpandProperty Count\r\n                $TotalItemCount = $TotalSubFolderCount + $TotalSubFilesCount\r\n\r\n                $DirectItemCount = ([int]$Folder.FieldValues.ItemChildCount + [int]$Folder.FieldValues.FolderChildCount)\r\n\r\n                $Report += [PSCustomObject]@{\r\n                    Type                     = \"Folder\"\r\n                    Id                       = $Folder.Id\r\n                    Path                     = $Folder.FieldValues.FileRef\r\n                    WebUrl                   = $Site.Url\r\n                    SiteTitle                = $Site.Title\r\n                    DocumentLibraryTitle     = $List.Title\r\n                    DocumentLibraryUrl       = $List.RootFolder.ServerRelativeUrl\r\n                    DocumentLibraryId        = $List.Id\r\n                    DirectFilesCount         = $Folder.FieldValues.ItemChildCount\r\n                    DirectFolderCount        = $Folder.FieldValues.FolderChildCount\r\n                    DirectItemCount          = $DirectItemCount\r\n                    DirectPercentageOfDocLib = $DirectItemCount -gt 0 ? \"$([Math]::Round(($DirectItemCount / $List.ItemCount) * 100, 2))%\" : \"0%\"\r\n                    DirectPercentageOfSite   = $DirectItemCount -gt 0 ? \"$([Math]::Round(($DirectItemCount / $TotalSiteItemCount) * 100, 2))%\" : \"0%\"\r\n                    TotalFolderCount         = $TotalSubFolderCount\r\n                    TotalFilesCount          = $TotalSubFilesCount\r\n                    TotalItemCount           = $TotalItemCount\r\n                    TotalPercentageOfDocLib  = $TotalItemCount -gt 0 ? \"$([Math]::Round(($TotalItemCount / $List.ItemCount) * 100, 2))%\" : \"0%\"\r\n                    TotalPercentageOfSite    = $TotalItemCount -gt 0 ? \"$([Math]::Round(($TotalItemCount / $TotalSiteItemCount) * 100, 2))%\" : \"0%\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$Report | Select-Object * | Export-Csv -Path \"Report.csv\" -NoTypeInformation\r\nInvoke-Item -Path \"Report.csv\"\r\n",
  "SystemPrompt": "You are a helpful analyser of PowerShell scripts that will be used to produce title and description of what the script intended function. Intended to give readers of the PowerShell script, a friendly message to describe what the script is about. The PowerShell scripts can be based on the Microsoft services such as Microsoft 365, SharePoint, Azure, Power Platform, Teams, Security and Compliance. The reponses should be in English and in JSON Format using this example: { \"Title\": \"Title of the Script\", \"Purpose\": \"Purpose of the Script\", \"LongDescription\": \"Describe what Powershell Script does\", \"Dependencies\": [\"Connect-PnPOnline\", \"Get-PnPListItem\"],  \"Assumptions\": [{ \"SourceSitePartURLRequired\": true, \"TenantFilterOptional\": false }]}.   If you don't know the answer, just say that you don't know, don't try to make up an answer",
  "LocalModelResults": [
    {
      "Model": "phi3.5:3.8b-mini-instruct-q4_0",
      "ModelResultDescription": "{\n  \"Title\": \"SharePoint Document Library Analysis Script\",\n  \"Purpose\": \"The script is designed to connect with a SharePoint site, retrieve information about document libraries within the tenant's sites and generate an itemized report.\",\n  \"LongDescription\": \"This PowerShell script establishes connection using provided credentials (Client ID & Thumbprint) for accessing Microsoft Office 365 admin center. It iterates through each available SharePoint site, retrieves information about document libraries based on a specific template ('101'), and generates detailed reports including folder count, file count, item count within those folders/libraries as well as their respective percentages of the total items in all sites or library respectively.\",\n  \"Dependencies\": [\"Connect-PnPOnline\", \"Get-PnPLibrary\"],\n  \"Assumptions\": [\n    {\n      \"SourceSitePartURLRequired\": true,\n      \"TenantFilterOptional\": false\n    }\n  ]\n}\n",
      "ModelResultObject": {
        "Title": "SharePoint Document Library Analysis Script",
        "Purpose": "The script is designed to connect with a SharePoint site, retrieve information about document libraries within the tenant's sites and generate an itemized report.",
        "LongDescription": "This PowerShell script establishes connection using provided credentials (Client ID & Thumbprint) for accessing Microsoft Office 365 admin center. It iterates through each available SharePoint site, retrieves information about document libraries based on a specific template ('101'), and generates detailed reports including folder count, file count, item count within those folders/libraries as well as their respective percentages of the total items in all sites or library respectively.",
        "Dependencies": [
          "Connect-PnPOnline",
          "Get-PnPLibrary"
        ],
        "Assumptions": [
          {
            "SourceSitePartURLRequired": true,
            "TenantFilterOptional": false
          }
        ]
      },
      "ExecutionTimeInSeconds": 50.5383171,
      "ModelResponse": {
        "model": "phi3.5:3.8b-mini-instruct-q4_0",
        "created_at": "2024-10-27T11:50:34.1660898Z",
        "response": "{\n  \"Title\": \"SharePoint Document Library Analysis Script\",\n  \"Purpose\": \"The script is designed to connect with a SharePoint site, retrieve information about document libraries within the tenant's sites and generate an itemized report.\",\n  \"LongDescription\": \"This PowerShell script establishes connection using provided credentials (Client ID & Thumbprint) for accessing Microsoft Office 365 admin center. It iterates through each available SharePoint site, retrieves information about document libraries based on a specific template ('101'), and generates detailed reports including folder count, file count, item count within those folders/libraries as well as their respective percentages of the total items in all sites or library respectively.\",\n  \"Dependencies\": [\"Connect-PnPOnline\", \"Get-PnPLibrary\"],\n  \"Assumptions\": [\n    {\n      \"SourceSitePartURLRequired\": true,\n      \"TenantFilterOptional\": false\n    }\n  ]\n}\n",
        "done": true,
        "done_reason": "stop",
        "total_duration": 48501693300,
        "load_duration": 5381700,
        "prompt_eval_count": 2279,
        "prompt_eval_duration": 36182634000,
        "eval_count": 217,
        "eval_duration": 12312547000
      }
    }
  ],
  "Processed": false
}
